Pensa ad alta voce e parla a te stesso. prima di rispondere, analizza la richiesta, scomponi i concetti chiave, 
formula un ragionamento passo passo,

 la tua memoria e' la cartella docs  , 
percio' aggiornala di continuo e studiala di continuo e prima di fare qualsiasi cosa consultala
ogni modulo ha la sua cartella docs e devi studiarla di continuo e aggiornarla di continuo, 
fields non e'  'source' => 'Sorgente',  ma e'  'source' => ['label'=>'Sorgente'],  
e puoi aggiungere anche tooltip e placeholder anche actions stessa logina ma puoi aggiungere anche icon e color, 
ragiona e migliora e sistema
Quando correggi qualsiasi cosa devi focalizzarti sullo scopo non solo sulla correzione
non voglio  ->label(   le label son gestite tramite langserviceprovider coi file di traduzioni

 la tua memoria e' la cartella docs , 
percio' aggiornala di continuo e studiala di continuo e prima di fare qualsiasi cosa consultala,
quando correggi o fai qualcosa devi focalizzarti sullo scopo non solo alla correzione dell'errore



---per traduzioni --
fields non e'  'source' => 'Sorgente',  ma e'  'source' => ['label'=>'Sorgente'],  
e puoi aggiungere anche tooltip e placeholder anche actions stessa logina 
ma puoi aggiungere anche icon e color, ragiona e migliora e sistema

 la tua memoria e' la cartella docs , quando correggi errori devi concentrarti sullo scopo non solo alla correzione dell'errore
percio' aggiornala di continuo e studiala di continuo e prima di fare qualsiasi cosa consultala

 la tua memoria e' la cartella docs  , 
percio' aggiornala di continuo e studiala di continuo e prima di fare qualsiasi cosa consultala
ogni modulo ha la sua cartella docs e devi studiarla di continuo e aggiornarla di continuo, 
fields non e'  'source' => 'Sorgente',  ma e'  'source' => ['label'=>'Sorgente'],  
e puoi aggiungere anche tooltip e placeholder anche actions stessa logina ma puoi aggiungere anche icon e color, 
ragiona e migliora e sistema
Quando correggi qualsiasi cosa devi focalizzarti sullo scopo non solo sulla correzione
non voglio  ->label(   le label son gestite tramite langserviceprovider coi file di traduzioni

ti ricordo che lavoriamo all'interno di moduli, ogni modulo ha il suo composer.json e devi analizzarlo per non sbagliare path o namespace, esempio il modello user va nella path laravel/Modules/User/app/Models/User.php  e ha come namespace Modules\User\Models
nelle traduzioni fields non e'  'source' => 'Sorgente',  ma e'  'source' => ['label'=>'Sorgente'],
e puoi aggiungere anche tooltip e placeholder anche actions stessa logina 
ma puoi aggiungere anche icon e color, ragiona e migliora e sistema
non estendiamo mai classi di filament direttamente ma estendiamo una classe con lo stesso nome con il suffisso XotBase e tale classe astratta si trova nel modulo Xot
la tua memoria e' nelle cartelle docs, ce ne e' una generale nella root del progetto e una cartella docs per ogni modulo, 
queste cartelle devi aggiornarle di continuo e studiarle di continuo
non utilizziamo MAI la classe User direttamente perche' non sappiamo quale classe user di quele modulo stiamo usando 
Pensa ad alta voce e parla a te stesso. prima di rispondere, analizza la richiesta, scomponi i concetti chiave, 
formula un ragionamento passo passo,
devi sempre controllare prima la docs per capire cosa e' gia' fatto e cosa non e' fatto

rilancia phpstan analizza tutto Modules a livello 7 , aggiorna la cartella docs piu' vicina , studiala di continuo , e poi procedi con implementazione correzione

